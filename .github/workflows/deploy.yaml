name: Deploy to EKS
on: push
permissions:
  packages: write
  contents: read
jobs:
  terraform:
    name: "Terraform Apply"
    runs-on: ubuntu-latest
    environment: dep
    env:
      AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
      AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }} 
    steps:
    - name: Checkout Repository
      uses: actions/checkout@v4
    - name: Setup Terraform
      uses: hashicorp/setup-terraform@v1
      with:
        terraform_version: latest
    - name: Terraform Init
      run: terraform init
    - name: Terraform Plan
      run: terraform plan
    - name: Terraform Apply
      run: terraform apply -auto-approve

  deploy:
    name: "Build and Deploy to EKS"
    runs-on: ubuntu-latest
    needs: terraform
    environment: dep
    steps:
    - name: Checkout Code
      uses: actions/checkout@v4
    - name: Set Repository Owner to Lowercase
      run: echo "REPO_OWNER=$(echo ${{ github.repository_owner }} | tr '[:upper:]' '[:lower:]')" >> $GITHUB_ENV
    - name: Log in to GitHub Container Registry
      run: echo "${{ secrets.GITHUB_TOKEN }}" | docker login ghcr.io -u env.REPO_OWNER --password-stdin
    - name: Build & Push Docker Image
      run: |
        docker build -t ghcr.io/${{ env.REPO_OWNER }}/myapp:latest .
        docker push ghcr.io/${{ env.REPO_OWNER }}/myapp:latest
    - name: configure AWS credentials
      uses: aws-actions/configure-aws-credentials@v1
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws-region: us-east-1
    - name: update kubeconfig for EKS
      run: aws eks update-kubeconfig --region us-east-1 --name myapp-cluster
    - name: Deploy to EKS
      run: |
          kubectl set image deployment/my-app my-app=ghcr.io/${{ env.REPO_OWNER }}/my-app:latest
          kubectl rollout status deployment/my-app